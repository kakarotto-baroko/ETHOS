const { h, render } = preact;
const html = htm.bind(h);
const Hooks = preactHooks;
function setText(s,t){ const el=document.querySelector(s); if(el) el.textContent=(t??"—"); }
async function j(u){ try{ const r=await fetch(u,{cache:"no-store"}); if(!r.ok) return null; return await r.json(); }catch(e){ return null } }
const pct=(x)=> (Math.max(0,Math.min(1,+x||0))*100).toFixed(0)+'%'; const fmt={pct1:(v)=> (v==null||isNaN(v))?'—':(Math.round(v*10)/10).toFixed(1)+'%', num:(v)=> (v==null||isNaN(v))?'—':String(v)};
const ROUTES=[{key:'overview',title:'Overview'},{key:'stages',title:'Stages'},{key:'boards',title:'Boards'},{key:'x',title:'X Tower'}];
const SUBCHIPS={overview:['日更','T+3','周更'],stages:['S1','S2','S3','S4','S5','观察池','假启动'],boards:['1000x','10000x']};
function parseHash(){const raw=location.hash.replace(/^#\/?/,'');const [p]=raw.split('?');return ROUTES.some(r=>r.key===p)?p:'overview';}
function Navbar({route,onNav}){return html`<nav class="navbar">${ROUTES.map(r=>html`<a href="javascript:;" class=${'nav-item '+(route===r.key?'active':'')} onClick=${()=>onNav(r.key)}>${r.title}</a>`)}</nav>`}
function Subnav({route}){const chips=SUBCHIPS[route]||[];return html`<div class="subnav">${chips.map(c=>html`<span class="chip">${c}</span>`)}</div>`}
function Bar({v}){return html`<div class="bar"><i style=${{width:pct(v)}}></i></div>`}
function MiniTile({k,v}){const show=(v!=null&&v<=1)?Math.round(v*100):fmt.num(v);const val=(v!=null&&v<=1)?v:(v>1?1:0);return html`<div class="mini-tile"><div class="kv"><span>${k}</span><span>${show}</span></div><${Bar} v=${val}/></div>`}
function ProjectCard({it}){const a=it.agents||{},m=it.metrics||{};const tiles=[];[['A1_vol_mcap',a.A1_vol_mcap],['A2_tvl',a.A2_tvl],['A3_sns',a.A3_sns],['A4_depth',a.A4_depth],['B1_leverage',a.B1_leverage],['B2_whale',a.B2_whale],['B3_dev',a.B3_dev],['B4_ecosys',a.B4_ecosys]].forEach(([k,v])=> (v!=null)&&tiles.push(h(MiniTile,{k,v})));const mtiles=Object.entries(m||{}).slice(0,2).map(([k,v])=>h(MiniTile,{k,v:typeof v==='number'?v:v}));return html`<div class="card project-card"><div class="project-head"><div class="project-name">${it.project||'—'}</div><span class="badge-stage">${it.stage||'—'}</span></div><div class="meta-row"><span>${it.structure||'—'}</span><span>Score ${it.score_total ?? '—'}</span><span class="badge"> ${it.bucket} </span></div><div class="mini-grid">${tiles}</div>${mtiles.length? html`<div class="mini-grid" style="margin-top:8px">${mtiles}</div>`:null}<div class="actions">执行建议：${it.actions||'—'}</div></div>`}
function SensorsView({data}){if(!data||!Array.isArray(data.layers)||!data.layers.length) return html`<section class="section"><div class="card muted">暂无传感数据</div></section>`;return html`<section class="section"><h2>早期传感器（S0–S0′）</h2><div class="grid grid-3">${data.layers.map(l=> html`<div class="card"><div class="project-head"><div class="project-name">${l.layer||'Layer'}</div><span class="badge">quality ${pct(l.quality||0)}</span></div><div class="bar"><i style=${{width:pct(l.quality||0)}}></i></div><div class="mini-grid">${(l.probes||[]).map(p=> h(MiniTile,{k:p.k,v:p.v}))}</div></div>`)}</div></section>`}
function StagesView({stages,watchlist,fake}){const order=(window.EOS_CFG?.labels?.stages)||['S1','S2','S3','S4','S5'];return html`<section class="section"><h2>阶段进度（S1–S5）</h2><div class="grid grid-3">${order.map(s=>{const pool=(stages?.[s]?.pool)||[];return html`<div class="card"><div class="project-head"><div class="project-name">${s}</div></div><div class="chips">${pool.length? pool.map(n=> html`<span class="chip">${n}</span>`):html`<span class="muted">暂无</span>`}</div></div>`})}</div>${Array.isArray(watchlist)&&watchlist.length? html`<details class="watchlist" open><summary>观察池（Watchlist）</summary><div class="grid grid-4">${watchlist.map(w=> html`<div class="card">${w}</div>`)}</div></details>`:null}${fake>0? html`<div class="alert">⚠️ 假启动预警：${fake} 枚</div>`:null}</section>`}
function BoardsView({items}){const left=(items||[]).filter(x=> String(x.bucket).toLowerCase()!=='10000x');const right=(items||[]).filter(x=> String(x.bucket).toLowerCase()==='10000x');return html`<section class="section"><div class="boards"><div class="board-col"><h2 class="blue">结构复利榜（1000x）</h2><div class="grid grid-2">${left.map(it=> h(ProjectCard,{it}))}</div></div><div class="board-col"><h2 class="red">叙事爆发榜（10000x）</h2><div class="grid grid-2">${right.map(it=> h(ProjectCard,{it}))}</div></div></div></section>`}
function XPanelView({xobj,xpol}){if(!xobj&&!xpol) return html`<section class="section"><div class="card muted">X 控制塔：暂无数据</div></section>`;return html`<section class="section"><div class="card"><div class="project-head"><div class="project-name">X 控制塔</div></div><div class="mini-grid">${xpol? html`<div class="mini-tile"><div class="kv"><span>Explore/Exploit</span><span>${Math.round((xpol.explore_exploit?.explore||0)*100)}/${Math.round((xpol.explore_exploit?.exploit||0)*100)}</span></div></div>`:null}${xpol? html`<div class="mini-tile"><div class="kv"><span>提名配额 S0′→S1</span><span>${xpol.promotion_quota?.S0p_to_S1 ?? xobj?.nomination_quota?.s1 ?? '—'}</span></div></div>`:null}${xpol? html`<div class="mini-tile"><div class="kv"><span>假启动惩罚倍数</span><span>${xpol.fake_start_penalty ?? '—'}</span></div></div>`:null}</div></div></section>`}
function App(){const [route,setRoute]=Hooks.useState(parseHash());const [st,setSt]=Hooks.useState({});Hooks.useEffect(()=>{const onHash=()=> setRoute(parseHash());window.addEventListener('hashchange',onHash);(async()=>{const cfg=(window.EOS_CFG||{}).data||{};const [board,stages,sensors,fb,s6,xo,xp]=await Promise.all([j(cfg.board||'/output/board.json'),j(cfg.stages||'/output/stages.json'),j(cfg.sensors||'/output/sensors.json'),j(cfg.feedback||'/output/feedback.json'),j(cfg.resonance||'/output/resonance.json'),j(cfg.x_objective||'/output/x_objective.json'),j(cfg.x_policy||'/output/x_policy.json')]);setSt({board,stages,sensors,fb,s6,xo,xp});setText('#updatedAt', board?.updated_at || '—');const s5txt=(window.EOS_CFG?.s5BadgeText? window.EOS_CFG.s5BadgeText(board?.market_regime):'S5: —');setText('#s5Badge', s5txt);})();return ()=> window.removeEventListener('hashchange',onHash);},[]);const view={overview: html`${SensorsView({data:st.sensors})}`,stages: html`${StagesView({stages:st.stages?.stages,watchlist:st.stages?.watchlist,fake:st.stages?.fake_start||0})}`,boards: html`${BoardsView({items:st.board?.items})}`,x: html`${XPanelView({xobj:st.xo,xpol:st.xp})}`}[route]||null;return html`${Navbar({route,onNav:(r)=>location.hash='#/'+r})}${Subnav({route})}${view}`}
render(h(App,{}), document.getElementById('app'));
